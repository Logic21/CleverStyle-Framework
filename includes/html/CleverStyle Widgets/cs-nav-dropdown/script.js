// Generated by CoffeeScript 1.9.3

/**
 * @package   CleverStyle Widgets
 * @author    Nazar Mokrynskyi <nazar@mokrynskyi.com>
 * @copyright Copyright (c) 2015, Nazar Mokrynskyi
 * @license   MIT License, see license.txt
 */

(function() {
  var html;

  html = document.documentElement;

  Polymer({
    'is': 'cs-nav-dropdown',
    'extends': 'nav',
    behaviors: [Polymer.cs.behaviors["this"]],
    hostAttributes: {
      role: 'group'
    },
    properties: {
      align: 'left',
      opened: {
        reflectToAttribute: true,
        type: Boolean
      },
      target: Object
    },
    created: function() {
      document.addEventListener('keydown', (function(_this) {
        return function(e) {
          if (e.keyCode === 27 && _this.opened) {
            return _this.opened = false;
          }
        };
      })(this));
      document.addEventListener('click', (function(_this) {
        return function(e) {
          var element, i, len, ref;
          if (_this.opened) {
            ref = e.path;
            for (i = 0, len = ref.length; i < len; i++) {
              element = ref[i];
              if (element === _this.target) {
                return;
              }
            }
            return _this.close();
          }
        };
      })(this));
    },
    attached: function() {
      if (!this.target && this.previousElementSibling.tagName === 'BUTTON') {
        this.target = this.previousElementSibling;
        this.target.action = 'toggle';
        this.target.bind = this;
      }
    },
    toggle: function() {
      if (!this.opened) {
        this.open();
      } else {
        this.close();
      }
    },
    open: function() {
      var target_position;
      if (this.opened || !this.target) {
        return;
      }
      target_position = this.target.getBoundingClientRect();
      if (this.align === 'left') {
        this.style.left = target_position.left + 'px';
      } else {
        this.style.right = (html.clientWidth - target_position.right - scrollX) + 'px';
      }
      this.style.top = target_position.top + target_position.height + 'px';
      this.opened = true;
      this.fire('open');
    },
    close: function() {
      if (this.opened) {
        this.opened = false;
        this.fire('close');
      }
    }
  });

}).call(this);
