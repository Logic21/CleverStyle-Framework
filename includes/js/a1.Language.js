// Generated by LiveScript 1.4.0
/**
 * @package   CleverStyle Framework
 * @author    Nazar Mokrynskyi <nazar@mokrynskyi.com>
 * @copyright Copyright (c) 2015-2016, Nazar Mokrynskyi
 * @license   MIT License, see license.txt
 */
(function(){
  var translations, is_ready, x$, slice$ = [].slice;
  translations = cs.Language;
  is_ready = false;
  function Language(prefix){
    var prefix_length, prefixed, fill_prefixed;
    prefix_length = prefix.length;
    prefixed = Object.create(Language);
    prefixed.ready = function(){
      return Language.ready().then(function(){
        return prefixed;
      });
    };
    fill_prefixed = function(){
      var key;
      for (key in Language) {
        if (key.indexOf(prefix) === 0) {
          prefixed[key.substr(prefix_length)] = Language[key];
        }
      }
    };
    if (is_ready) {
      fill_prefixed();
    } else {
      Language.ready().then(fill_prefixed);
    }
    return prefixed;
  }
  x$ = cs.Language = Language;
  x$.get = function(key){
    return this[key].toString();
  };
  x$.format = function(key){
    var args;
    args = slice$.call(arguments, 1);
    return this[key].apply(this, args);
  };
  x$.ready = function(){
    var ready;
    ready = new Promise(function(resolve){
      var i$, ref$;
      for (i$ in ref$ = translations) {
        (fn$.call(this, i$, ref$[i$]));
      }
      is_ready = true;
      resolve(Language);
      function fn$(key, value){
        Language[key] = function(){
          return vsprintf(value, slice$.call(arguments));
        };
        Language[key].toString = function(){
          return value;
        };
      }
    });
    this.ready = function(){
      return ready;
    };
    return ready;
  };
  x$.ready();
}).call(this);
