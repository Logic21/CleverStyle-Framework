// Generated by CoffeeScript 1.9.3

/**
 * @package   CleverStyle CMS
 * @author    Nazar Mokrynskyi <nazar@mokrynskyi.com>
 * @copyright Copyright (c) 2015, Nazar Mokrynskyi
 * @license   MIT License, see license.txt
 */


/*
  * Events system similar to one found on backend, including available methods and arguments order
 */

(function() {
  var slice = [].slice;

  (function() {
    var callbacks;
    callbacks = {};
    this.on = function(event, callback) {
      if (!event || !callback) {
        return this;
      }
      if (!callbacks[event]) {
        callbacks[event] = [];
      }
      callbacks[event].push(callback);
      return this;
    };
    this.off = function(event, callback) {
      if (!callbacks[event]) {
        return this;
      }
      if (!callback) {
        delete callbacks[event];
        return this;
      }
      callbacks[event] = callbacks[event].filter(function(c) {
        return c !== callback;
      });
      return this;
    };
    this.once = function(event, callback) {
      var callback_;
      if (!event || !callback) {
        return this;
      }
      callback_ = (function(_this) {
        return function() {
          _this.off(event, callback_);
          return callback.apply(callback, arguments);
        };
      })(this);
      return this.on(event, callback_);
    };
    return this.fire = function() {
      var callback, event, i, index, len, params, ref;
      event = arguments[0], params = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      if (!event || !callbacks[event]) {
        return true;
      }
      ref = callbacks[event];
      for (index = i = 0, len = ref.length; i < len; index = ++i) {
        callback = ref[index];
        if (callback.apply(callback, params) === false) {
          return false;
        }
      }
      return true;
    };
  }).call(cs.Event = {});

}).call(this);
