// Generated by CoffeeScript 1.4.0

/**
 * @package       Shop
 * @order_status  modules
 * @author        Nazar Mokrynskyi <nazar@mokrynskyi.com>
 * @copyright     Copyright (c) 2014-2015, Nazar Mokrynskyi
 * @license       MIT License, see license.txt
*/


(function() {
  var cart, price_formatting;

  cart = cs.shop.cart;

  price_formatting = cs.shop.settings.price_formatting;

  Polymer({
    units: 0,
    ready: function() {
      var $this;
      this.$.img.innerHTML = this.querySelector('#img').outerHTML;
      this.href = this.querySelector('#link').href;
      this.item_title = this.querySelector('#link').innerHTML;
      $this = $(this);
      this.item_id = $this.data('id');
      this.unit_price = $this.data('unit-price');
      this.price = 0;
      this.units = $this.data('units');
      this.unit_price_formatted = sprintf(price_formatting, this.unit_price);
      return this.price_formatted = sprintf(price_formatting, this.price);
    },
    unitsChanged: function() {
      var _this = this;
      if (parseInt(this.units)) {
        cart.set(this.item_id, this.units);
      } else {
        cart.del(this.item_id);
        this.update_price(0);
        return;
      }
      cart.get_calculated(function(data) {
        data.items.forEach(function(item) {
          if (parseInt(item.id) === _this.item_id) {
            _this.update_price(item.price);
            return false;
          }
        });
      });
    },
    update_price: function(price) {
      var discount;
      this.price = price;
      this.price_formatted = sprintf(price_formatting, this.price);
      discount = this.units * this.unit_price - this.price;
      return this.$.discount.innerHTML = discount ? (discount = sprintf(price_formatting, discount), "(" + cs.Language.shop_discount + ": " + discount + ")") : '';
    }
  });

}).call(this);
