// Generated by CoffeeScript 1.9.3

/**
 * @package   Shop
 * @category  modules
 * @author    Nazar Mokrynskyi <nazar@mokrynskyi.com>
 * @copyright Copyright (c) 2014-2015, Nazar Mokrynskyi
 * @license   MIT License, see license.txt
 */

(function() {
  var L, cart, details, method;

  L = cs.Language;

  cart = cs.shop.cart;

  Polymer({
    shipping_types: cs.shop.shipping_types,
    shipping_type: cart.params.shipping_type || 0,
    shipping_type_details: {},
    shipping_cost_formatted: '',
    shipping_username: cart.params.shipping_username || '',
    phone: cart.params.phone || '',
    address: cart.params.address || '',
    comment: cart.params.comment || '',
    payment_method: 0,
    payment_methods: (function() {
      var ref, results;
      ref = cs.shop.payment_methods;
      results = [];
      for (method in ref) {
        details = ref[method];
        details.method = method;
        results.push(details);
      }
      return results;
    })(),
    registration_required: !cs.is_user && !cs.shop.settings.allow_guests_orders,
    created: function() {
      return this.shipping_username = this.shipping_username || (cs.is_user ? this.getAttribute('username') : '');
    },
    domReady: function() {
      var $payment_method, $shipping_type;
      this.$.h1.innerHTML = this.querySelector('h1').innerHTML;
      $(this.shadowRoot).find('textarea').autosize();
      $shipping_type = $(this.$.shipping_type);
      $shipping_type.val(this.shipping_type || this.shipping_types[0].id).change((function(_this) {
        return function() {
          return _this.shipping_types.forEach(function(shipping_type) {
            if (shipping_type.id === $shipping_type.val()) {
              _this.shipping_type = shipping_type.id;
              cart.params.shipping_type = _this.shipping_type;
              _this.shipping_type_details = shipping_type;
              _this.shipping_cost_formatted = sprintf(cs.shop.settings.price_formatting, shipping_type.price);
              return false;
            }
          });
        };
      })(this)).change();
      $payment_method = $(this.$.payment_method);
      return $payment_method.val(this.payment_method).change((function(_this) {
        return function() {
          var payment_method;
          payment_method = _this.payment_methods[$payment_method.val()];
          _this.payment_method = payment_method.method;
          return _this.$.payment_method_description.innerHTML = payment_method.description;
        };
      })(this)).change();
    },
    shipping_usernameChanged: function() {
      return cart.params.shipping_username = this.shipping_username;
    },
    phoneChanged: function() {
      return cart.params.phone = this.phone;
    },
    addressChanged: function() {
      return cart.params.address = this.address;
    },
    commentChanged: function() {
      return cart.params.comment = this.comment;
    },
    finish_order: function() {
      return $.ajax({
        url: 'api/Shop/orders',
        type: 'post',
        data: {
          shipping_type: this.shipping_type,
          shipping_username: this.shipping_username,
          shipping_phone: this.shipping_type_details.phone_needed ? this.phone : '',
          shipping_address: this.shipping_type_details.address_needed ? this.address : '',
          payment_method: this.payment_method,
          comment: this.comment,
          items: cs.shop.cart.get_all()
        },
        success: (function(_this) {
          return function(result) {
            var id, modal;
            cs.shop.cart.clean();
            if (_this.payment_method === 'shop:cash') {
              return $.cs.simple_modal("<h1 class=\"uk-text-center\">" + L.shop_thanks_for_order + "</h1>").on('hide.uk.modal', function() {
                return location.href = 'Shop/orders_';
              });
            } else {
              id = result.split('/').pop();
              modal = $.cs.simple_modal("<h1 class=\"uk-text-center\">" + L.shop_thanks_for_order + "</h1>\n<p class=\"uk-text-center\">\n	<button type=\"button\" class=\"uk-button uk-button-primary pay-now\">" + L.shop_pay_now + "</button>\n	<button type=\"button\" class=\"uk-button pay-later\">" + L.shop_pay_later + "</button>\n</p>").on('hide.uk.modal', function() {
                return location.href = 'Shop/orders_';
              });
              modal.find('.pay-now').click(function() {
                return location.href = "Shop/pay/" + id;
              });
              return modal.find('.pay-later').click(function() {
                modal.hide();
                return location.href = 'Shop/orders_';
              });
            }
          };
        })(this)
      });
    }
  });

}).call(this);
