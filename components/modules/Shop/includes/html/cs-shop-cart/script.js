// Generated by CoffeeScript 1.9.3

/**
 * @package   Shop
 * @category  modules
 * @author    Nazar Mokrynskyi <nazar@mokrynskyi.com>
 * @copyright Copyright (c) 2014-2015, Nazar Mokrynskyi
 * @license   MIT License, see license.txt
 */

(function() {
  var L, cart, params, shop;

  L = cs.Language;

  shop = cs.shop;

  cart = shop.cart;

  params = cart.params;

  Polymer({
    'is': 'cs-shop-cart',
    behaviors: [cs.Polymer.behaviors.Language],
    properties: {
      shipping_types: [],
      shipping_type: {
        observer: 'shipping_type_changed',
        type: Number,
        value: params.shipping_type
      },
      shipping_type_details: Object,
      shipping_cost_formatted: '',
      shipping_username: {
        observer: 'shipping_username_changed',
        type: String,
        value: params.shipping_username || ''
      },
      phone: {
        observer: 'phone_changed',
        type: String,
        value: params.phone || ''
      },
      address: {
        observer: 'address_changed',
        type: String,
        value: params.address || ''
      },
      comment: {
        observer: 'comment_changed',
        type: String,
        value: params.comment || ''
      },
      payment_method: {
        observer: 'payment_method_changed',
        type: String
      },
      payment_methods: [],
      registration_required: !cs.is_user && !shop.settings.allow_guests_orders
    },
    ready: function() {
      var details, method;
      this.set('shipping_types', shop.shipping_types);
      this.set('payment_methods', (function() {
        var ref, results;
        ref = shop.payment_methods;
        results = [];
        for (method in ref) {
          details = ref[method];
          details.method = method;
          results.push(details);
        }
        return results;
      })());
      this.shipping_type = this.shipping_type || shop.shipping_types[0].id;
      this.payment_method = this.payment_methods[0].method;
      this.set('shipping_username', this.shipping_username || (cs.is_user ? this.getAttribute('username') : ''));
      return autosize(this.shadowRoot.querySelectorAll('textarea'));
    },
    shipping_type_changed: function(shipping_type_selected) {
      params.shipping_type = shipping_type_selected;
      return shop.shipping_types.forEach((function(_this) {
        return function(shipping_type) {
          if (shipping_type.id === shipping_type_selected) {
            _this.set('shipping_type_details', shipping_type);
            _this.set('shipping_cost_formatted', sprintf(shop.settings.price_formatting, shipping_type.price));
            return false;
          }
        };
      })(this));
    },
    payment_method_changed: function(payment_method_selected) {
      return this.$.payment_method_description.innerHTML = shop.payment_methods[payment_method_selected].description;
    },
    shipping_username_changed: function() {
      return params.shipping_username = this.shipping_username;
    },
    phone_changed: function() {
      return params.phone = this.phone;
    },
    address_changed: function() {
      return params.address = this.address;
    },
    comment_changed: function() {
      return params.comment = this.comment;
    },
    finish_order: function() {
      return $.ajax({
        url: 'api/Shop/orders',
        type: 'post',
        data: {
          shipping_type: this.shipping_type,
          shipping_username: this.shipping_username,
          shipping_phone: this.shipping_type_details.phone_needed ? this.phone : '',
          shipping_address: this.shipping_type_details.address_needed ? this.address : '',
          payment_method: this.payment_method,
          comment: this.comment,
          items: cart.get_all()
        },
        success: (function(_this) {
          return function(result) {
            var id, modal;
            cart.clean();
            if (_this.payment_method === 'shop:cash') {
              return $(cs.ui.simple_modal("<h1 class=\"cs-text-center\">" + L.shop_thanks_for_order + "</h1>")).on('close', function() {
                return location.href = 'Shop/orders_';
              });
            } else {
              id = result.split('/').pop();
              modal = $(cs.ui.simple_modal("<h1 class=\"cs-text-center\">" + L.shop_thanks_for_order + "</h1>\n<p class=\"cs-text-center\">\n	<button is=\"cs-button\" primary type=\"button\" class=\"pay-now\">" + L.shop_pay_now + "</button>\n	<button is=\"cs-button\" type=\"button\" class=\"pay-later\">" + L.shop_pay_later + "</button>\n</p>")).on('close', function() {
                return location.href = 'Shop/orders_';
              });
              modal.find('.pay-now').click(function() {
                return location.href = "Shop/pay/" + id;
              });
              return modal.find('.pay-later').click(function() {
                modal.hide();
                return location.href = 'Shop/orders_';
              });
            }
          };
        })(this)
      });
    }
  });

}).call(this);
