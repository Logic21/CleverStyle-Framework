// Generated by CoffeeScript 1.9.3

/**
 * @package   Shop
 * @category  modules
 * @author    Nazar Mokrynskyi <nazar@mokrynskyi.com>
 * @copyright Copyright (c) 2014-2015, Nazar Mokrynskyi
 * @license   MIT License, see license.txt
 */

(function() {
  var L;

  L = cs.Language;

  Polymer({
    L: L,
    paid: true,
    ready: function() {
      var $this, discount, ref, ref1, ref2, shipping_type, total_price;
      $this = $(this);
      this.paid = $this.data('paid');
      this.show_pay_now = !this.paid && $this.data('payment_method') !== 'shop:cash';
      this.order_number = sprintf(L.shop_order_number, $this.data('id'));
      this.order_date = $this.data('date-formatted');
      this.order_status = $this.children('#order_status').text();
      shipping_type = $this.children('#shipping_type');
      this.shipping_type = shipping_type.text();
      this.shipping_cost = $this.data('shipping_cost');
      this.shipping_cost_formatted = sprintf(cs.shop.settings.price_formatting, this.shipping_cost);
      total_price = 0;
      discount = 0;
      $this.find('cs-shop-order-item').each(function() {
        var $item, price, unit_price, units;
        $item = $(this);
        units = $item.data('units');
        unit_price = $item.data('unit-price');
        price = $item.data('price');
        total_price += units * unit_price;
        return discount += (units * unit_price) - price;
      });
      this.total_price_formatted = sprintf(cs.shop.settings.price_formatting, total_price);
      this.discount_formatted = discount ? sprintf(cs.shop.settings.price_formatting, discount) : '';
      this.for_payment_formatted = sprintf(cs.shop.settings.price_formatting, $this.data('for_payment'));
      this.phone = ((ref = this.querySelector('#phone')) != null ? ref.innerHTML : void 0) || '';
      this.address = $.trim(((ref1 = this.querySelector('#address')) != null ? ref1.innerHTML : void 0) || '').replace(/\n/g, '<br>');
      return this.comment = $.trim(((ref2 = this.querySelector('#comment')) != null ? ref2.innerHTML : void 0) || '').replace(/\n/g, '<br>');
    },
    phoneChanged: function() {
      return this.$.phone.innerHTML = this.phone;
    },
    addressChanged: function() {
      return this.$.address.innerHTML = this.address;
    },
    commentChanged: function() {
      return this.$.comment.innerHTML = this.comment;
    },
    pay: function() {
      return location.href = 'Shop/pay/' + $(this).data('id');
    }
  });

}).call(this);
