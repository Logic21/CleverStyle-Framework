// Generated by CoffeeScript 1.9.3

/**
 * @package   Shop
 * @category  modules
 * @author    Nazar Mokrynskyi <nazar@mokrynskyi.com>
 * @copyright Copyright (c) 2014-2016, Nazar Mokrynskyi
 * @license   MIT License, see license.txt
 */

(function() {
  var L;

  L = cs.Language('shop_');

  Polymer({
    'is': 'cs-shop-order',
    behaviors: [cs.Polymer.behaviors.Language('shop_')],
    properties: {
      order_id: Number,
      date: Number,
      date_formatted: String,
      shipping_cost: Number,
      for_payment: Number,
      payment_method: String,
      paid: Boolean
    },
    ready: function() {
      var discount, ref, ref1, ref2, total_price;
      this.show_pay_now = !this.paid && this.payment_method !== 'shop:cash';
      this.order_number = sprintf('' + Lorder_number, this.order_id);
      this.order_status = this.querySelector('#order_status').textContent;
      this.shipping_type = this.querySelector('#shipping_type').textContent;
      this.shipping_cost_formatted = sprintf(cs.shop.settings.price_formatting, this.shipping_cost);
      total_price = 0;
      discount = 0;
      $(this).find('cs-shop-order-item').each(function() {
        total_price += this.getAttribute('units') * this.getAttribute('unit_price');
        return discount += (this.getAttribute('units') * this.getAttribute('unit_price')) - this.getAttribute('price');
      });
      this.total_price_formatted = sprintf(cs.shop.settings.price_formatting, total_price);
      this.discount_formatted = discount ? sprintf(cs.shop.settings.price_formatting, discount) : '';
      this.for_payment_formatted = sprintf(cs.shop.settings.price_formatting, this.for_payment);
      this.phone = ((ref = this.querySelector('#phone')) != null ? ref.textContent : void 0) || '';
      this.$.phone.textContent = this.phone;
      this.address = $.trim(((ref1 = this.querySelector('#address')) != null ? ref1.textContent : void 0) || '').replace(/\n/g, '<br>');
      this.$.address.textContent = this.address;
      this.comment = $.trim(((ref2 = this.querySelector('#comment')) != null ? ref2.textContent : void 0) || '').replace(/\n/g, '<br>');
      return this.$.comment.textContent = this.comment;
    },
    pay: function() {
      return location.href = 'Shop/pay/' + this.order_id;
    }
  });

}).call(this);
