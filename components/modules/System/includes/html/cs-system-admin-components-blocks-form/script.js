// Generated by CoffeeScript 1.9.3

/**
 * @package    CleverStyle CMS
 * @subpackage System module
 * @category   modules
 * @author     Nazar Mokrynskyi <nazar@mokrynskyi.com>
 * @copyright  Copyright (c) 2015, Nazar Mokrynskyi
 * @license    MIT License, see license.txt
 */

(function() {
  var L, get_active_class;

  get_active_class = function(is_active) {
    if (is_active) {
      return 'uk-active';
    } else {
      return '';
    }
  };

  L = cs.Language;

  Polymer({
    'is': 'cs-system-admin-components-blocks-form',
    behaviors: [cs.Polymer.behaviors.Language],
    properties: {
      tooltip_animation: '{animation:true,delay:200}'
    },
    ready: function() {
      var editor, json;
      json = JSON.parse(this.querySelector('script').textContent);
      json.block_data.type = json.block_data.type || json.types[0];
      json.block_data.template = json.block_data.template || json.templates[0];
      if (json.block_data.active === void 0) {
        json.block_data.active = 1;
      } else {
        json.block_data.active = parseInt(json.block_data.active);
      }
      this.json = json;
      $(this.shadowRoot).find('textarea').val(this.json.block_data.content);
      editor = this.shadowRoot.querySelector('.EDITOR');
      $(editor).after('<content select=".editor-container"/>');
      $('<div class="editor-container"><div></div></div>').appendTo(this).children().append(editor);
      this.workarounds(this.shadowRoot);
      return cs.observe_inserts_on(this.shadowRoot, this.workarounds);
    },
    workarounds: function(target) {
      return $(target).cs().tooltips_inside().cs().radio_buttons_inside().cs().connect_to_parent_form();
    },
    type_change: function() {
      var type;
      type = this.shadowRoot.querySelector("[name='block[type]']").value;
      return $(this.shadowRoot).find('.html, .raw_html').prop('hidden', true).filter('.' + type).prop('hidden', false);
    }
  });

}).call(this);
