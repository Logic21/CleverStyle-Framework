// Generated by LiveScript 1.4.0
/**
 * @package    CleverStyle CMS
 * @subpackage System module
 * @category   modules
 * @author     Nazar Mokrynskyi <nazar@mokrynskyi.com>
 * @copyright  Copyright (c) 2015, Nazar Mokrynskyi
 * @license    MIT License, see license.txt
 */
(function(){
  var L;
  L = cs.Language;
  Polymer({
    'is': 'cs-system-admin-components-databases-form',
    behaviors: [cs.Polymer.behaviors.Language],
    properties: {
      add: Boolean,
      databaseIndex: Number,
      mirrorIndex: Number,
      addition: false,
      databases: Array,
      database: {
        type: Object,
        value: {
          mirror: -1,
          host: '',
          type: 'MySQLi',
          prefix: '',
          name: '',
          user: '',
          password: '',
          charset: ''
        }
      },
      engines: Array
    },
    ready: function(){
      var this$ = this;
      $.when($.getJSON('api/System/admin/databases'), $.ajax({
        url: 'api/System/admin/databases',
        type: 'engines'
      })).then(function(arg$, arg1$){
        this$.databases = arg$[0];
        this$.engines = arg1$[0];
        if (this$.add) {
          if (!isNaN(this$.databaseIndex)) {
            this$.set('database.mirror', this$.databaseIndex);
          }
        } else {
          this$.databases.forEach(function(database){
            if (this$.databaseIndex == database.index) {
              if (isNaN(this$.mirrorIndex)) {
                this$.set('database', database);
              } else {
                database.mirrors.forEach(function(mirror){
                  if (this$.mirrorIndex == mirror.index) {
                    this$.set('database', mirror);
                  }
                });
              }
            }
          });
        }
      });
    },
    _save: function(){
      $.ajax({
        url: 'api/System/admin/databases' + (!isNaN(this.databaseIndex) ? '/' + this.databaseIndex + (!isNaN(this.mirrorIndex) ? '/' + this.mirrorIndex : '') : ''),
        type: this.add ? 'post' : 'patch',
        data: {
          mirror: this.database.mirror,
          host: this.database.host,
          type: this.database.type,
          prefix: this.database.prefix,
          name: this.database.name,
          user: this.database.user,
          password: this.database.password,
          charset: this.database.charset
        },
        success: function(){
          cs.ui.notify(L.changes_saved, 'success', 5);
        }
      });
    },
    _db_name: function(index, host, name){
      if (index) {
        return host + "/" + name;
      } else {
        return L.core_db;
      }
    }
  });
}).call(this);
