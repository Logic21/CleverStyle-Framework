// Generated by LiveScript 1.4.0
/**
 * @package   Composer
 * @category  modules
 * @author    Nazar Mokrynskyi <nazar@mokrynskyi.com>
 * @copyright Copyright (c) 2015, Nazar Mokrynskyi
 * @license   MIT License, see license.txt
 */
(function(){
  var modal, open_modal;
  modal = null;
  open_modal = function(action, package_name, category, force){
    force == null && (force = false);
    if (package_name === 'Composer' && !force) {
      return;
    }
    return new Promise(function(resolve, reject){
      var this$ = this;
      $.getJSON('api/System/admin/modules', function(modules){
        var i$, len$, module, force;
        for (i$ = 0, len$ = modules.length; i$ < len$; ++i$) {
          module = modules[i$];
          if (module.name === 'Composer' && module.active !== 1) {
            resolve();
            return;
          }
        }
        force = force ? 'force' : '';
        modal = cs.ui.simple_modal("<cs-composer action=\"" + action + "\" package=\"" + package_name + "\" category=\"" + category + "\" " + force + "/>");
        $(modal).on('close', function(){
          cs.Event.fire('admin/Composer/canceled');
        });
        cs.Event.once('admin/Composer/updated', function(){
          modal.close();
          resolve();
        });
      });
    });
  };
  cs.Event.on('admin/System/components/modules/install/before', function(data){
    return open_modal('install', data.name, 'modules');
  }).on('admin/System/components/modules/uninstall/before', function(data){
    return open_modal('uninstall', data.name, 'modules');
  }).on('admin/System/components/plugins/enable/before', function(data){
    return open_modal('install', data.name, 'plugins');
  }).on('admin/System/components/plugins/disable/before', function(data){
    return open_modal('uninstall', data.name, 'plugins');
  });
  $('.cs-composer-admin-force-update').click(function(){
    open_modal('install', 'Composer', 'modules', true);
  });
}).call(this);
